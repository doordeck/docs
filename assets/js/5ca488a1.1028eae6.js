"use strict";(self.webpackChunkdoordeck_docs=self.webpackChunkdoordeck_docs||[]).push([[78],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},9429:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guide/ephemeral-key-registration-unlocking-a-door","title":"Ephemeral Key Registration & Unlocking a Door","description":"User ephemeral keys, Ed25519, certificate chains and digital signatures using EdDSA","source":"@site/docs/guide/ephemeral-key-registration-unlocking-a-door.md","sourceDirName":"guide","slug":"/guide/ephemeral-key-registration-unlocking-a-door","permalink":"/docs/guide/ephemeral-key-registration-unlocking-a-door","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"ephemeral-key-registration-unlocking-a-door","title":"Ephemeral Key Registration & Unlocking a Door","description":"User ephemeral keys, Ed25519, certificate chains and digital signatures using EdDSA"},"sidebar":"tutorialSidebar","previous":{"title":"Authenticating Your Users","permalink":"/docs/guide/authenticating-your-users"},"next":{"title":"Adding More Ephemeral Keys & Secondary Authentication Checks","permalink":"/docs/guide/adding-more-ephemeral-keys-secondary-authentication-checks"}}');var s=i(4848),r=i(8453);const o={id:"ephemeral-key-registration-unlocking-a-door",title:"Ephemeral Key Registration & Unlocking a Door",description:"User ephemeral keys, Ed25519, certificate chains and digital signatures using EdDSA"},a=void 0,l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Ephemeral Key Registration",id:"ephemeral-key-registration",level:2},{value:"Get A Door",id:"get-a-door",level:2},{value:"Unlock It!",id:"unlock-it",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"In this guide we're exploring user ephemeral keys, Ed25519, certificate chains and digital signatures using EdDSA -\nall of this to unlock a door!"}),"\n",(0,s.jsx)(n.admonition,{title:"Use the SDK",type:"info",children:(0,s.jsxs)(n.p,{children:["Our ",(0,s.jsx)(n.a,{href:"/docs/kotlin-multiplatform-sdk/install",children:"SDK"})," takes care of the complexity detailed in this guide, we strongly recommend using it for your application.\nThe information provided here is for educational purposes and to help you understand the underlying processes."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"The examples in this article require a recent version of OpenSSL (we tested against OpenSSL 3.1.4). Verify your OpenSSL\nversion by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"openssl genpkey -algorithm ed25519\n"})}),"\n",(0,s.jsx)(n.p,{children:"If that command succeeds, you're ready to proceed."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"concepts",children:"Concepts"}),"\n",(0,s.jsx)(n.p,{children:"Ed25519 is a public\u2010key signature system. It consists of:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A private key, which you use to sign messages."}),"\n",(0,s.jsx)(n.li,{children:"A public key, which anyone can use to verify signatures."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Doordeck relies on digital signatures to ensure that only the right user is performing an action. Under the hood:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"EdDSA stands for Edwards Digital Signature Algorithm, the algorithm used to generate and verify signatures."}),"\n",(0,s.jsx)(n.li,{children:"Ed25519 is the elliptic\u2010curve specification on which EdDSA operates."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If you've used RSA, Ed25519 works similarly but offers smaller key sizes and better performance."}),"\n",(0,s.jsx)(n.h2,{id:"ephemeral-key-registration",children:"Ephemeral Key Registration"}),"\n",(0,s.jsx)(n.p,{children:"Every time a user logs into a new device, we generate a new Ed25519 keypair and ask Doordeck to sign it in the form of a\nkeychain, we can perform these steps manually, let's start by generating a keypair."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"openssl genpkey -algorithm ed25519 -outform DER -out private.key\n"})}),"\n",(0,s.jsx)(n.p,{children:"Extract the public key"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"openssl pkey -inform DER -in private.key -pubout -outform DER -out public.key\n"})}),"\n",(0,s.jsx)(n.p,{children:"We need to wrap the public key in base 64 encoding to be able to send it to Doordeck:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cat public.key | base64 > public.base64.key\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we can send it to Doordeck using an auth key generated from the previous article; currently we need to use the\ndevelopment endpoint - we'll save the response to a file called ",(0,s.jsx)(n.code,{children:"certs.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "https://api.doordeck.com/auth/certificate" \\\n  -X POST \\\n  -H "Authorization: Bearer $TOKEN"  \\\n  -H \'content-type: application/json\'  \\\n  --data-binary "{\\"ephemeralKey\\":\\"`cat public.base64.key`\\"}" > certs.json\n'})}),"\n",(0,s.jsx)(n.p,{children:"This endpoint tells us our newly generated certificate chain and our Doordeck user ID which we need for certain\noperations, such as having a door shared with us. We'll be using this information later so hold onto it."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"get-a-door",children:"Get A Door"}),"\n",(0,s.jsx)(n.p,{children:"Whilst we could jump straight into unlocking a door, you probably haven't got one setup yet, so I've thrown together a\nbasic HTML form where you can input your user ID as displayed from the last step:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cat certs.json | jq .userId\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://api.doordeck.com/demo/",children:"https://api.doordeck.com/demo/"})," and put your user ID in."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"unlock-it",children:"Unlock It!"}),"\n",(0,s.jsx)(n.p,{children:"Now we need to construct a signed JWT request and send it to Doordeck to forward onto the Demo door - this is\nsurprisingly similar to the OpenID token we created in the previous article since OpenID is built on top of JWT!"}),"\n",(0,s.jsxs)(n.p,{children:["The header is easy, we take the certificate chain from the last step and put it in the ",(0,s.jsx)(n.code,{children:"x5c"})," field, we then specify our\nalgorithm, EdDSA and ",(0,s.jsx)(n.code,{children:"typ"})," as ",(0,s.jsx)(n.code,{children:"JWT"}),", e.g."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="JWT Header"',children:'{\n "typ": "jwt",\n "x5c": [\n   "MII...",\n   "MII...",\n   "MII...",\n   "MII..."\n ],\n "alg": "EdDSA"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Most certificates start with MII but replace them with actual certificates as shown in the last step, in the same order."}),"\n",(0,s.jsx)(n.p,{children:"The body is where we specify the door we want to unlock and how long our request is valid for, e.g.:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="JWT Payload"',children:'{\n  "iss": "YOUR_USER_ID",\n  "sub": "ad8fb900-4def-11e8-9370-170748b9fca8",\n  "operation": {\n    "type": "MUTATE_LOCK",\n    "locked": false\n  },\n  "exp": 1550497860,\n  "iat": 1550497800,\n  "nbf": 1550497800\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You'll have to adjust a few fields in this JSON example, specifically you should put your user ID from the last step in\nthe ",(0,s.jsx)(n.code,{children:"iss"})," field (as you're issuing the command), the subject here is the demo door ID so you can leave that the same,\nbut you'll need to set the ",(0,s.jsx)(n.code,{children:"iat"})," and ",(0,s.jsx)(n.code,{children:"nbf"})," fields to the current Unix timestamp in seconds then the ",(0,s.jsx)(n.code,{children:"exp"})," field to the\ncurrent Unix timestamp + 60 seconds, this is adjustable but 60 seconds is a sensible default."]}),"\n",(0,s.jsxs)(n.p,{children:["As JWT goes, we have to BASE64URL encode the header then the body and concatenate them with a ",(0,s.jsx)(n.code,{children:"."})," period in between."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'alias base64url="base64 | sed \'s/+/-/g;s/\\//_/g;s/=//g\'"\necho -n \'{"typ":"jwt","x5c":["MII...","MII...","MII...","MII..."],"alg":"EdDSA"}\' | base64url\necho -n \'{"iss":"YOUR_USER_ID","sub":"ad8fb900-4def-11e8-9370-170748b9fca8","operation":{"type":"MUTATE_LOCK","locked":false},"exp":1550497860,"iat":1550497800,"nbf":1550497800}\' | base64url\n'})}),"\n",(0,s.jsx)(n.p,{children:"Combine these and perform a signature calculation."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"echo -n eyJ0eXAiOiJqd3QiLCJ4NWMiOlsiTUlJLi4uIiwiTUlJLi4uIiwiTUlJLi4uIiwiTUlJLi4uIl0sImFsZyI6IkVkRFNBIn0K.eyJpc3MiOiJZT1VSX1VTRVJfSUQiLCJzdWIiOiJhZDhmYjkwMC00ZGVmLTExZTgtOTM3MC0xNzA3NDhiOWZjYTgiLCJvcGVyYXRpb24iOnsidHlwZSI6Ik1VVEFCTEVfTE9DSyIsImxvY2tlZCI6ZmFsc2V9LCJleHAiOjE1NTA0OTc4NjAsImlhdCI6MTU1MDQ5NzgwMCwibmJmIjoxNTUwNDk3ODAwfQo > token\nopenssl pkeyutl -sign -inkey private.key -rawin -in token | base64url\n"})}),"\n",(0,s.jsx)(n.p,{children:"Phew, almost there! That command should output a signature in Base64Url format, e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"lA-iqBxlWd5JHT15_72dOQmFqglWrmJEVX2_-R0ZCelZrejquDJLMGAJV_8YpRD3cWaWDMCalB2Zc7juD4uXCQ\n"})}),"\n",(0,s.jsx)(n.p,{children:"Combine it all together, and you get a complete JWT token which we can now send to Doordeck."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl 'https://api.doordeck.com/device/ad8fb900-4def-11e8-9370-170748b9fca8/execute' \\\n -X POST \\\n -H 'authorization: Bearer TOKEN' \\\n -H 'content-type: application/jwt' \\\n --data-binary \"$JWT\"\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Sending this command should trigger the animated virtual door at ",(0,s.jsx)(n.a,{href:"https://demo.doordeck.com/",children:"https://demo.doordeck.com/"}),", don't forget, you may need\nto update the expiry time of your JWT since generating the initial payload."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);